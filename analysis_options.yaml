# Analysis options for Flutter Clean Architecture Template
# This configuration enforces strict coding standards and best practices

include: package:very_good_analysis/analysis_options.yaml

analyzer:
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/*.gr.dart"
    - "**/*.config.dart"
    - "build/**"
    - "lib/generated/**"
    - "coverage/**"
    - ".dart_tool/**"

  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true

  strong-mode:
    implicit-casts: false
    implicit-dynamic: false

  errors:
    # Treat missing required parameters as errors
    missing_required_param: error
    # Treat missing returns as errors
    missing_return: error
    # Treat invalid assignments as errors
    invalid_assignment: error
    # Treat dead code as warnings
    dead_code: warning
    # Treat unused imports as warnings
    unused_import: warning
    # Treat unused local variables as warnings
    unused_local_variable: warning

linter:
  rules:
    # === DART STYLE ===
    prefer_single_quotes: true
    prefer_relative_imports: true
    always_use_package_imports: false

    # === ERROR PREVENTION ===
    avoid_print: true
    avoid_web_libraries_in_flutter: true
    cancel_subscriptions: true
    close_sinks: true
    avoid_empty_else: true
    avoid_returning_null_for_future: true
    avoid_slow_async_io: true
    avoid_type_to_string: true
    avoid_unused_constructor_parameters: true
    avoid_void_async: true
    control_flow_in_finally: true
    empty_catches: true
    hash_and_equals: true
    invariant_booleans: true
    iterable_contains_unrelated_type: true
    list_remove_unrelated_type: true
    literal_only_boolean_expressions: true
    no_adjacent_strings_in_list: true
    no_duplicate_case_values: true
    no_logic_in_create_state: true
    prefer_void_to_null: true
    test_types_in_equals: true
    throw_in_finally: true
    unnecessary_statements: true
    unrelated_type_equality_checks: true
    use_build_context_synchronously: true
    use_key_in_widget_constructors: true
    valid_regexps: true

    # === CODE QUALITY ===
    prefer_const_constructors: true
    prefer_const_constructors_in_immutables: true
    prefer_const_declarations: true
    prefer_const_literals_to_create_immutables: true
    prefer_final_locals: true
    prefer_final_in_for_each: true
    prefer_final_fields: true
    prefer_if_null_operators: true
    prefer_is_empty: true
    prefer_is_not_empty: true
    prefer_is_not_operator: true
    prefer_null_aware_operators: true
    prefer_spread_collections: true
    prefer_typing_uninitialized_variables: true
    provide_deprecation_message: true
    sized_box_for_whitespace: true
    sort_child_properties_last: true
    use_full_hex_values_for_flutter_colors: true
    use_named_constants: true

    # === DOCUMENTATION ===
    public_member_api_docs: false # Set to true for libraries
    comment_references: true

    # === FORMATTING ===
    lines_longer_than_80_chars: false
    curly_braces_in_flow_control_structures: true
    prefer_adjacent_string_concatenation: true
    prefer_interpolation_to_compose_strings: true
    unnecessary_brace_in_string_interps: true

    # === PERFORMANCE ===
    avoid_function_literals_in_foreach_calls: true
    prefer_for_elements_to_map_fromIterable: true
    prefer_collection_literals: true
    prefer_contains: true
    prefer_foreach: true
    prefer_if_elements_to_conditional_expressions: true
    prefer_inlined_adds: true
    prefer_iterable_whereType: true

    # === FLUTTER SPECIFIC ===
    avoid_unnecessary_containers: true
    use_colored_box: true
    use_decorated_box: true

    # === CLEAN CODE ===
    avoid_catches_without_on_clauses: true
    avoid_catching_errors: true
    avoid_multiple_declarations_per_line: true
    avoid_positional_boolean_parameters: true
    avoid_redundant_argument_values: true
    avoid_renaming_method_parameters: true
    avoid_returning_null: true
    avoid_returning_null_for_void: true
    avoid_setters_without_getters: true
    avoid_single_cascade_in_expression_statements: true
    avoid_types_on_closure_parameters: true
    cascade_invocations: true
    conditional_uri_does_not_exist: true
    deprecated_consistency: true
    directives_ordering: true
    do_not_use_environment: true
    exhaustive_cases: true
    file_names: true
    implementation_imports: true
    join_return_with_assignment: true
    leading_newlines_in_multiline_strings: true
    library_names: true
    library_prefixes: true
    missing_whitespace_between_adjacent_strings: true
    no_runtimeType_toString: true
    noop_primitive_operations: true
    null_check_on_nullable_type_parameter: true
    omit_local_variable_types: true
    one_member_abstracts: true
    only_throw_errors: true
    overridden_fields: true
    parameter_assignments: true
    prefer_asserts_in_initializer_lists: true
    prefer_asserts_with_message: true
    prefer_constructors_over_static_methods: true
    prefer_expression_function_bodies: true
    prefer_function_declarations_over_variables: true
    prefer_generic_function_type_aliases: true
    prefer_initializing_formals: true
    prefer_int_literals: true
    prefer_mixin: true
    recursive_getters: true
    require_trailing_commas: true
    slash_for_doc_comments: true
    sort_constructors_first: true
    sort_pub_dependencies: true
    sort_unnamed_constructors_first: true
    tighten_type_of_initializing_formals: true
    type_annotate_public_apis: true
    type_init_formals: true
    unawaited_futures: true
    unnecessary_await_in_return: true
    unnecessary_const: true
    unnecessary_constructor_name: true
    unnecessary_final: false
    unnecessary_getters_setters: true
    unnecessary_lambdas: true
    unnecessary_late: true
    unnecessary_new: true
    unnecessary_null_aware_assignments: true
    unnecessary_null_checks: true
    unnecessary_null_in_if_null_operators: true
    unnecessary_nullable_for_final_variable_declarations: true
    unnecessary_overrides: true
    unnecessary_parenthesis: true
    unnecessary_raw_strings: true
    unnecessary_string_escapes: true
    unnecessary_string_interpolations: true
    unnecessary_this: true
    use_enums: true
    use_if_null_to_convert_nulls_to_bools: true
    use_is_even_rather_than_modulo: true
    use_late_for_private_fields_and_variables: true
    use_raw_strings: true
    use_setters_to_change_properties: true
    use_super_parameters: true
    use_test_throws_matchers: true
    use_to_and_as_if_applicable: true
    void_checks: true
